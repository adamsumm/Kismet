
default character: 
	last_name = "#lastNames#",
	first_name = "#firstNames#",
	age = [18:80],
    last_birthday = now - [0:4] season,
	traits = [4:5] traits,
    skin = "[ivory|beige|honey|almond|amber|espresso|chocolate]",
    hair = "[white|grey|black|darkbrown|brown|lightbrown|blonde|bleached|rydia|purple|blue|red|orange|pink]",
    eye = "[green|brown|blue|orange|purple|red]",
    presentation = "[femme|butch]",
    pronouns = "[he/him|she/her|they/them]".
    
default location:.


/////////////////COMMON INITIALIZATIONS/////////////////////////////////        
initialization tavern:   
    let TavernLastName = tavern_owner's last_name,
        TavernFirstName = tavern_owner's first_name;
         
  
    select [1] character as tavern_owner:
        is owner of tavern,
        is boss of barkeep,
        is connected of tavern,
        hometown = Location,
        is drinker,
        is purpose,
        :where
        vocation = "tavern_owner",
        hometown ?= Location,
        age = [30:80];
    
    select [2] character as barkeep:
        is barkeep of tavern,
        is connected of tavern,
        is employee of tavern_owner,
        hometown = Location,
        is coworker of barkeep,
        is drinker,
        is purpose,
        :where
        vocation = "barkeep",
        hometown ?= Location,
        age = [20:40];
        
    select [5:6] character as regular:
        hometown = Location,
        is connected of tavern,
        is regular of tavern,
        is drinker
        :where
        hometown = Location,
        age = [20:80];
    
    create [1] location as tavern:
        location_type = "tavern",
        hometown = Location,
        name = "[The[ Old | ][Red|Blue|Green|Lusty|Sullen|Happy|Insatiable|Naughty|Poisoned|Reveling|Rusty|Silly|Broken|Golden|Laughing|Lonely|Prancing|Silver|Sign of the|Sleepy|Wistful] [Goblin|Boggart|Fae|Unicorn|Dragon|Wolf|Troll|Bear|Badger|Lion|Horse|Skunk|Aardvark|Civet|Dog|Eagle|Ghost|Imp|Jackal|Kobold|Manticore|Gnoll|Octopus|Parrot|Quail|Rusalka|Serpent|Tapir|Vulture|Wendigo|Yak|Zebra][| Inn| Tavern]|[Old |][#TavernLastName#|#TavernFirstName#]'s [Tavern|Inn]] of #Location#",
        has owner of tavern_owner,
        has barkeep of barkeep,
        is purpose,
        has regular of regular.    
    
initialization  smith_shop:
    
    select [1] character as smithy:
        is smithy of blacksmith,
        is connected of blacksmith,
        is boss of smith_apprentice,
        hometown = Location,
        is purpose,
        :where
        vocation = "smithy",
        hometown ?= Location,
        age = [40:70];
    
    select [2] character as smith_apprentice:
        is smith_apprentice of blacksmith,
        is employee of smithy,
        is connected of blacksmith,
        hometown = Location,
        is coworker of smith_apprentice,
        is purpose,
        :where
        vocation = "smith_apprentice",
        hometown ?= Location,
        age = [18:30];
    
    create [1] location as blacksmith:
        location_type = "smith",
        name = "the blacksmith of #Location#",
        hometown = Location,
        has smithy of smithy,
        is purpose,
        has smith_apprentice of smith_apprentice.
initialization marketplace:

    select [3] character as vendor:
        is vendor of marketplace,
        is connected of marketplace,
        is scared of enforcer,
        is scared of racketeer,
        is victim of enforcer,
        is victim of racketeer,
        likes pickpocket = [-10:-1],
        likes enforcer = [-10:-1],
        likes racketeer = [-10:-1],
        hometown = Location,
        is coworker of vendor,
        is purpose,
        :where
        vocation = "vendor",
        hometown ?= Location,
        age = [30:60];
        
    select [1] character as enforcer:
        is enforcer of marketplace,
        is employee of racketeer,
        is connected of marketplace,
        hometown = Location,
        is criminal,
        is coworker of enforcer,
        is purpose,
        :where
        vocation = "enforcer",
        hometown ?= Location,
        age = [20:40];
    
    select [1] character as racketeer:
        is boss of enforcer,
        is connected of marketplace,
        hometown = Location,
        is criminal,
        is important,
        is purpose,
        :where
        vocation = "racketeer",
        hometown ?= Location,
        age = [40:60];
  
    select [1] character as pickpocket:
        is pickpocket of marketplace,
        is connected of marketplace,
        is thief,
        is criminal,
        hometown = Location,
        is purpose,
        :where
        vocation = "pickpocket",
        hometown ?= Location,
        age = [15:30];
    
    create [1] location as marketplace:
        hometown = Location,
        location_type = "marketplace",
        name = "the marketplace of #Location#",
        is purpose,
        has vendor of vendor,
        has regular of regular,
        has enforcer of enforcer,
        has pickpocket of pickpocket,
        has racketeer of racketeer.
        
        
        
    
initialization young_family:
    let FamilyName = first parent's last_name,
        FamilySkin = parent's skin,
        FamilyHair = parent's hair;
    
    select [2] character as parent:
        is parent of child,
        is spouse of parent,
        is related_to of child,
        is related_to of parent,
        is spouse,
        is connected of house,
        is resident of house,
        last_name = FamilyName,
        hometown = Location,
        :where
        hometown ?= Location,
        has a  vocation,
        is not parent, 
        is not spouse,
        age = [20:40];
    
    select [1:2] character as child:
        is child of parent,
        is sibling of child,
        is related_to of child,
        is related_to of parent,
        is connected of house,
        is resident of house,
        is spouse,
        last_name = FamilyName,
        hometown = Location,
        skin = FamilySkin,
        hair = FamilyHair,
        is purpose,
        :where
        hometown ?= Location,
        is not child, 
        age = [1:10];
        
    create [1] location as house:
        hometown = Location,
        location_type = "house",
        name = "the #FamilyName# house in #Location#",
        is purpose,
        has resident of child,
        has resident of parent.
      
    
initialization old_family:
    let FamilyName = first parent's last_name,
        FamilySkin = parent's skin,
        FamilyHair = parent's hair;
    
    select [2] character as parent:
        is parent of child,
        is spouse of parent,
        is related_to of child,
        is related_to of parent,
        is connected of house,
        is resident of house,
        last_name = FamilyName,
        hometown = Location,
        :where
        has a vocation,
        hometown ?= Location,
        is not parent, 
        is not spouse,
        age = [50:70];
    
    select [1:2] character as child:
        is child of parent,
        is sibling of child,
        is related_to of child,
        is related_to of parent,
        is connected of house,
        is resident of house,
        last_name = FamilyName,
        skin = FamilySkin,
        hair = FamilyHair,
        hometown = Location,
        :where
        has a  vocation,
        hometown ?= Location,
        is not child,
        age = [20:40];
        
    create [1] location as house:
        hometown = Location,
        location_type = "house",
        name = "the #FamilyName# house in #Location#",
        is purpose,
        has resident of child,
        has resident of parent.

/////////////////////// BIG CITIES //////////////////////

initialization royal_country:
    let Location = "Baltissia",
      Royal_name = "#lastNames#";
    
    select [1] character as monarch:
        is monarch,
        ruler = Location,
        hometown = Location,
        last_name = Royal_name,
        is noteworthy,
        is royalty,
        is spouse,
        is connected of throne_room,
        is spouse to monarch_spouse,
        is parent to monarchlings,
        is important,
        is purpose,
        :where
        vocation = "monarch",
        hometown ?= Location,
        age = [30:60];
    
    select [1] character as monarch_spouse:
        hometown = Location,
        is noteworthy,
        is royalty,
        is connected of throne_room,
        is spouse to monarch,
        is spouse,
        last_name = Royal_name,
        is parent to monarchlings,
        is important,
        is purpose,
        :where
        vocation = "monarch_spouse",
        hometown ?= Location,
        age = [30:60];
        
    select [2:3] character as monarchlings:
        hometown = Location,
        is noteworthy,
        is royalty,
        last_name = Royal_name,
        is connected of castle_library,
        is connected of throne_room,
        is child to monarch,
        is sibling to monarchlings,
        is important,
        is purpose,
        :where
        vocation = "monarchling",
        hometown ?= Location,
        age = [1:10];
        
    select [1] character as librarian:
        is librarian of castle_library,
        is fealty to monarch,
        is connected of castle_library,
        hometown = Location,
        is purpose,
        :where
        vocation = "librarian",
        hometown ?= Location,
        age = [20:60],
        is scholar;
    
    select [2] character as royal_tutor:
        is tutor of castle_library,
        is connected of castle_library,
        is tutor to monarchlings,
        hometown = Location,
        is fealty to monarch,
        is purpose,
        :where
        vocation = "royal_tutor",
        hometown ?= Location,
        age = [20:60],
        is scholar;
    
    select [1] character as chancellor:
        is chancellor to monarch,
        is noteworthy,
        is fealty to monarch,
        is connected of throne_room,
        hometown = Location,
        is purpose,
        :where
        vocation = "chancellor",
        hometown ?= Location,
        age = [20:60],
        is scholar;
        
    create [1] location as throne_room:
        name = "Throne Room of #Location#",
        location_type = "throne_room",
        hometown = Location,
        is purpose,
        has monarch of monarch,
        has royalty of monarchling,
        has royalty of monarch_spouse,
        has chancellor of chancellor,
        has knight of knight;
        
   
    create [1] location as castle_library:
        name = "Royal Library of #Location#",
        location_type = "library",
        hometown = Location,
        is purpose,
        has librarian of librarian,
        has tutor of royal_tutor;
    
    
    select [1] character as chef:  
        is chef of castle_kitchen,
        is connected of castle_kitchen,
        is boss of kitchen_worker,
        is fealty to monarch,
        hometown = Location,
        is purpose,
        :where
        vocation = "chef",
        hometown ?= Location,
        age = [20:50];
    
    select [2] character as kitchen_worker:
        is employee to chef,
        is connected of castle_kitchen,
        is fealty to monarch,
        hometown = Location,
        is worker of castle_kitchen,
        is coworker of kitchen_worker,
        is purpose,
        :where
        vocation = "kitchen_worker",
        hometown ?= Location,
        age = [15:30];
    
    create [1] location as castle_kitchen:
        name = "castle kitchen of #Location#",
        location_type = "kitchen",
        hometown = Location,
        is purpose,
        has chef of chef,
        has worker of kitchen_worker,
        has guest of monarch,
        has guest of monarch_spouse,
        has guest of monarchlings;
    
    select [4] character as guard:
        is fealty to monarch,
        hometown = Location,
        is guard of barracks,
        is connected of barracks,
        is coworker of guard,
        is coworker of squire,
        is employee of knight,
        is purpose,
        :where
        vocation = "guard",
        hometown ?= Location,
        age = [20:50];
     
    select [3] character as knight:
        is fealty to monarch,
        hometown = Location,
        is knight of barracks,
        is connected of barracks,
        is boss of guard,
        is boss of squire,
        is purpose,
        :where
        vocation = "knight",
        hometown ?= Location,
        age = [20:60];
    
    
    select [2] character as squire:
        is fealty to monarch,
        hometown = Location,
        is squire of  barracks,
        is connected of  barracks,
        is guard to prisoner,
        is coworker of guard,
        is employee of knight,
        is purpose,
        :where
        vocation = "knight",
        hometown ?= Location,
        age = [14:19];
    
    
    create [1] location as barracks:
        name = "the barracks of #Location# castle",
        location_type = "barracks",
        hometown = Location,
        is purpose,
        has knight of knight,
        has guard of guard,
        has squire of squire;
    
    create [1] location as town:
        name = "around #Location#",
        location_type = "town",
        is purpose,
        hometown = Location;
        
    create [1] old_family;
    create [1] young_family.
    


initialization mining_town:
    let Location = "Dolbrae";
    
    create [1] location as town:
        name = "around #Location#",
        location_type = "town",
        is purpose,
        hometown = Location;
    
    select [1] character as foreman:
        is foreman of mine,
        is boss of miner,
        is connected of mine,
        hometown = Location,
        is purpose,
        is important,
        :where
        vocation = "foreman",
        hometown ?= Location,
        age = [30:60];
    
    select [4] character as miner:
        is miner of mine,
        is connected of mine,
        is worker of mine,
        is employee of foreman,
        hometown = Location,
        is coworker of miner,
        is purpose,
        :where
        vocation = "miner",
        hometown ?= Location,
        age = [18:60];
    
    create [1] location as mine:
        name = "the mines of #Location#",
        location_type = "mine",
        hometown = Location,
        is purpose,
        has foreman of foreman,
        has miner of miner
        ;     
        
    create [1] smith_shop;
    
    
    create [1] old_family;
    create [1] young_family;
    create [1] tavern.

initialization port_town:
    let Location = "Ebrook";
    
    
    create [1] location as town:
        name = "around #Location#",
        location_type = "town",
        is purpose,
        hometown = Location;
        
    select [1] character as shipwright_owner:
        is owner of shipyard,
        is noteworthy,
        is boss of engineer,
        is connected of shipyard,
        is boss of ship_builder,
        hometown = Location,
        is purpose,
        is important,
        :where
        vocation = "shipwright_owner",
        hometown ?= Location,
        age = [40:70];
        
    select [2] character as engineer:
        is engineer of shipyard,
        is employee of shipwright_owner,
        is boss of ship_builder,
        is connected of shipyard,
        hometown = Location,
        is purpose,
        :where
        vocation = "engineer",
        hometown ?= Location,
        age = [30:60];
        
    select [3] character as ship_builder:
        is ship_builder of shipyard,
        is employee of shipwright_owner,
        is employee of engineer,
        is connected of shipyard,
        hometown = Location,
        is purpose,
        is coworker of ship_builder,
        :where
        vocation = "ship_builder",
        hometown ?= Location,
        age = [20:50];
    
    create [1] location as shipyard:
        hometown = Location,
        location_type = "shipyard",
        name = "the shipyard of #Location#",
        is purpose,
        has engineer of engineer,
        has owner of shipwright_owner,
        has ship_builder of ship_builder;
    
    
    select [1] character as foreman:
        is shipping_foreman of docks,
        is boss of dockworker,
        is connected of docks,
        is purpose,
        hometown = Location,
        :where
        vocation = "foreman",
        hometown ?= Location,
        age = [30:60];
    
    
    select [3] character as dockworker:
        is dockworker of docks,
        is employee of foreman,
        hometown = Location,
        is purpose,
        is connected of docks,
        is coworker of dockworker,
        :where
        vocation = "dockworker",
        hometown ?= Location,
        age = [18:50];
    
    select [1] character as prostitute:
        is prostitute of docks,
        hometown = Location,
        is purpose,
        is connected of docks,
        :where
        vocation = "prostitute",
        hometown ?= Location,
        age = [21:35];
        
    select [2] character as fisher:
        is fisher of docks,
        hometown = Location,
        is purpose,
        is connected of docks,
        :where
        hometown ?= Location,
        age = [40:70];
        
    create [1] location as docks:
        hometown = Location,
        location_type = "docks",
        name = "the docks of #Location#",
        is purpose,
        has shipping_foreman of foreman,
        has dockworker of dockworker,
        has prostitute of prostitute,
        has fisher of fisher;
    
    
    select [1] character as captain:
        is captain of boat,
        is boss of sailor,
        is noteworthy,
        is connected of boat,
        is mariner,
        is purpose,
        is important,
        hometown = Location,
        :where
        is not vocation,
        vocation = "captain",
        hometown ?= Location,
        age = [30:60];
    
    
    select [4] character as sailor:
        is sailor of boat,
        is connected of boat,
        is employee of captain,
        hometown = Location,
        is purpose,
        is mariner,
        is coworker of sailor,
        :where
        vocation = "sailor",
        hometown ?= Location,
        age = [18:50];
        
    create [1] location as boat:
        hometown = Location,
        location_type = "boat",
        is purpose,
        name = "a boat docked in the port of #Location#",
        has captain of captain,
        has sailor of sailor;
    
    
    create [1] old_family;
    create [1] young_family;
    create [1] tavern.
    
        
initialization thieves_town:
    let Location = "Figliz";
    
    create [1] location as town:
        name = "around #Location#",
        is purpose,
        location_type = "town",
        hometown = Location;
        
        
    //Think TNMT the movie -- it's like an abandoned warehouse with a bunch of teenage thieves 
    create [1] location as thieves_den:
        hometown = Location,
        location_type = "thieves_den",
        name = "the den of the thieves guild of #Location#",
        is purpose,
        has master_thief of master_thief,
        has spy_master of spy_master,
        has spy of spy,
        has thief of thief;
        
    select [7] character as thief:
        is thief,
        is criminal,
        is purpose,
        is connected of thieves_den,
        is employee of master_thief,
        is thief of thieves_den,
        hometown = Location,
        is coworker of thief,
        :where
        vocation = "thief",
        hometown ?= Location,
        age = [12:25];
    
    select [3] character as spy:
        is criminal,
        is employee of spy_master,
        is spy of thieves_den,
        is purpose,
        is connected of thieves_den,
        hometown = Location,
        is coworker of spy,
        :where
        vocation = "spy",
        hometown ?= Location,
        age = [20:60];   
        
    select [1] character as master_thief:
        is thief,
        is noteworthy,
        is criminal,
        is important,
        is connected of thieves_den,
        is boss of thief,
        is boss of spy_master,
        is boss of spy,
        is purpose,
        is master_thief of thieves_den,
        hometown = Location,
        :where
        vocation = "master_thief",
        hometown ?= Location,
        age = [30:60];
    
    select [1] character as spy_master:
        is thief,
        is noteworthy,
        is criminal,
        is connected of thieves_den,
        is spy_master of thieves_den,
        is boss of spy,
        is spy_master of thieves_den,
        is purpose,
        hometown = Location,
        :where
        vocation = "spy_master",
        hometown ?= Location,
        age = [30:60];
    
    create [1] tavern.
    
initialization ancient_city:
    let Location = "Garitrea";


    create [1] location as town:
        name = "around #Location#",
        is purpose,
        location_type = "town",
        hometown = Location;
        
    select [2] character as treasure_hunter:
        is treasure_hunter of ruins,
        is noteworthy,
        is rival of treasure_hunter,
        is connected of ruins,
        hometown = Location,
        is purpose,
        :where
        vocation = "treasure_hunter",
        hometown ?= Location,
        age = [20:50];
       
    select [2] character as archaelogist:
        is archaelogist of ruins,
        is noteworthy,
        is rival of treasure_hunter,
        is connected of ruins,
        hometown = Location,
        is purpose,
        :where
        vocation = "archaelogist",
        hometown ?= Location,
        age = [20:50];
        
    create [1] location as ruins:
        location_type = "ruins",
        location_name = "the ruins of #Location#",
        is purpose,
        has treasure_hunter of treasure_hunter,
        has archaelogist of archaelogist,
        hometown = Location;
    
    select [6] character as bard:
        is bard of ruins,
        is connected of ruins,
        is coworker of bard,
        hometown = Location,
        is purpose,
        :where
        vocation = "bard",
        hometown ?= Location,
        age = [20:60];
      
    select [10:20] character as tourist:
        is tourist of amphitheatre
        :where
        age = [20:80];
        
    create [1] location as amphitheatre:
        location_type = "amphitheatre",
        location_name = "the amphitheatre of #Location#",
        is purpose,
        has bard of bard,
        has tourist of tourist,
        hometown = Location;
        
    
    
    create [1] old_family;
    
    create [1] young_family;
    create [1] tavern.
 
initialization merchant_city:
    let Location = "Melamb",
        Baron = baron's last_name;
    
    
    create [1] location as town:
        name = "around #Location#",
        location_type = "town",
        is purpose,
        hometown = Location;
    
    select [1] character as baron:
        is owner of manor_library,
        is noteworthy,
        is owner of manor_ballroom,
        is owner of manor_garden,
        is owner of manor_gallery,
        is connected of manor_library,
        is connected of manor_ballroom,
        is connected of manor_garden,
        is connected of manor_gallery,
        is spouse of baron_spouse,
        is parent of baronling,
        is patron of auction_house,
        is patron of opera_house,
        is important,
        is purpose,
        last_name = Baron,
        hometown = Location,
        :where
        vocation = "baron",
        hometown ?= Location,
        is rich,
        age = [50:70];
        
    select [1] character as baron_spouse:
        is guest of manor_library,
        is noteworthy,
        is guest of manor_ballroom,
        is guest of manor_garden,
        is guest of manor_gallery,
        is connected of manor_library,
        is connected of manor_ballroom,
        is connected of manor_garden,
        is connected of manor_gallery,
        is patron of auction_house,
        is patron of opera_house,
        is spouse of baron,
        is parent of baronling,
        is important,
        is purpose,
        hometown = Location,
        last_name = Baron,
        :where
        vocation = "baron_spouse",
        hometown ?= Location,
        is rich,
        age = [20:25];
        
    select [0:2] character as baronling:
        is guest of manor_library,
        is noteworthy,
        is guest of manor_ballroom,
        is guest of manor_garden,
        is guest of manor_gallery,
        is connected of manor_library,
        is connected of manor_ballroom,
        is connected of manor_garden,
        is connected of manor_gallery,
        is patron of auction_house,
        is patron of opera_house,
        is child of baron,
        is child of baronling,
        is important,
        is purpose,
        last_name = Baron,
        hometown = Location,
        :where
        vocation = "baronling",
        hometown ?= Location,
        is rich,
        age = [2:20];
    
    select [5:7] character as hanger_on:
        is guest of manor_library,
        is guest of manor_ballroom,
        is guest of manor_garden,
        is guest of manor_gallery,
        is connected of manor_library,
        is connected of manor_ballroom,
        is connected of manor_garden,
        is connected of manor_gallery,
        is connected of auction_house,
        is connected of opera_house,
        is patron of auction_house,
        is patron of opera_house,
        is sycophant of baron,
        is sycophant of baronling,
        is sycophant of baron_spouse,
        is purpose,
        hometown = Location,
        :where
        vocation = "hanger_on",
        hometown ?= Location,
        is rich,
        age = [20:60];
        
        
    select [1] character as librarian:
        is librarian of manor_library,
        is employee of majordomo,
        is employee of butler,
        is connected of manor_library,
        is servant of baron,
        hometown = Location,
        is purpose,
        :where
        vocation = "librarian",
        hometown ?= Location,
        age = [20:60],
        is scholar;
    
    select [1] character as tutor:
        is tutor of manor_library,
        is connected of manor_library,
        is tutor to baronlings,
        is employee of majordomo,
        is employee of butler,
        is servant of baron,
        is purpose,
        hometown = Location,
        :where
        vocation = "tutor",
        hometown ?= Location,
        age = [20:60],
        is scholar;
    
   
    create [1] location as manor_library:
        name = "Library of #Baron# manor",
        location_type = "library",
        hometown = Location,
        is purpose,
        has librarian of librarian,
        has tutor of tutor;
    
    
    select [1] character as chef:  
        is chef of manor_kitchen,
        is boss of kitchen_worker,
        is connected of manor_kitchen,
        is employee of majordomo,
        is employee of butler,
        is servant of baron,
        hometown = Location,
        is purpose,
        :where
        vocation = "chef",
        hometown ?= Location,
        age = [20:50];
    
    select [2] character as kitchen_worker:
        is employee to chef,
        is connected of manor_kitchen,
        is employee of majordomo,
        is employee of butler,
        is servant of baron,
        hometown = Location,
        is worker of manor_kitchen,
        is coworker of kitchen_worker,
        is purpose,
        :where
        vocation = "kitchen_worker",
        hometown ?= Location,
        age = [15:30];
        
    select [21] character as gardener:
        hometown = Location,
        is worker of manor_garden,
        is connected of manor_garden,
        is coworker of gardener,
        is employee of majordomo,
        is employee of butler,
        is servant of baron,
        is purpose,
        :where
        vocation = "gardener",
        hometown ?= Location,
        age = [20:50];
    
    
    create [1] location as manor_kitchen:
        name = "the  kitchen of #Baron# manor",
        location_type = "kitchen",
        hometown = Location,
        is purpose,
        has chef of chef,
        has worker of kitchen_worker,
        has owner of baron,
        has guest of baron_spouse,
        has guest of baronlings,
        has guest of hanger_on;
    
    
    
    create [1] location as manor_garden:
        name = "the  gardens of #Baron# manor",
        location_type = "garden",
        hometown = Location,
        is purpose,
        has gardener of gardener,
        has owner of baron,
        has guest of baron_spouse,
        has guest of baronlings,
        has guest of hanger_on;
        
    create [1] location as manor_ballroom:
        name = "the  ballroom of #Baron# manor",
        location_type = "ballroom",
        hometown = Location,
        is purpose,
        has butler of butler,
        has owner of baron,
        has guest of baron_spouse,
        has guest of baronlings,
        has guest of hanger_on;
        
    select [1] character as artist:
        is artist of manor_gallery,
        is noteworthy,
        is connected of manor_gallery,
        hometown = Location,
        is employee of majordomo,
        is employee of butler,
        is servant of baron,
        is purpose,
        :where
        vocation = "artist",
        hometown ?= Location,
        age = [20:50];
        
    create [1] location as manor_gallery:
        name = "the  gallery of #Baron# manor",
        location_type = "ballroom",
        hometown = Location,
        is purpose,
        has majordomo of majordomo,
        has artist of artist,
        has owner of baron,
        has guest of baron_spouse,
        has guest of baronlings,
        has guest of hanger_on;
    
    select [1] character as auctioneer:
        is auctioneer of auction_house,
        is connected of auction_house,
        is boss of curator,
        is noteworthy,
        is important,
        is purpose,
        :where
        vocation = "auctioneer",
        hometown ?= Location,
        age = [40:60];
    
    select [1] character as curator:
        is curator of auction_house,
        is connected of auction_house,
        is employee of auctioneer,
        is coworker of curator,
        is purpose,
        :where
        vocation = "curator",
        hometown ?= Location,
        age = [20:70];
    
    create [1] location as auction_house:
        name = "the  auction house of #Location#",
        location_type = "auction_house",
        is purpose,
        has auctioneer of auctioneer,
        hometown = Location,
        has curator of curator;
        
    select [1] character as impresario:
        is boss of bard,
        is boss of diva,
        is noteworthy,
        is connected of opera_house,
        is impresario of opera_house,
        is important,
        is purpose,
        :where
        vocation = "impresario",
        hometown ?= Location,
        age = [40:70];
    
    select [4] character as bard:
        is bard of opera_house,
        is employee of impresario,
        is connected of opera_house,
        is coworker of bard,
        is employee of diva,
        is purpose,
        :where
        vocation = "bard",
        hometown ?= Location,
        age = [20:70];
        
    select [2] character as diva:
        is diva of opera_house,
        is noteworthy,
        is connected of opera_house,
        is employee of impresario,
        is coworker of diva,
        is boss of  bard,
        is rival of diva,
        is purpose,
        :where
        vocation = "diva",
        hometown ?= Location,
        age = [20:70];
    
    select [10:20] character as tourist:
        is tourist of opera_house
        :where
        age = [20:80];
        
    create [1] location as opera_house:
        name = "the  opera house of #Location#",
        location_type = "opera_house",
        hometown = Location,
        is purpose,
        has bard of bard,
        has impresario of impresario,
        has diva of diva,
        has tourist of tourist;
    
    create [1] old_family; 
    create [1] young_family;
    create [1] tavern
    .

initialization scholar_town:
    let Location = "Yarmecia",
        Academy = "[Gran |Grand |]#Location# Academy";
    
    
    create [1] location as town:
        name = "around #Location#",
        location_type = "town",
        is purpose,
        hometown = Location;
     
    //librarian & researcher & student
    select [1] character as librarian:
        is librarian of library,
        is connected of library,
        hometown = Location,
        is purpose,
        :where
        vocation = "librarian",
        hometown ?= Location,
        age = [20:60],
        is scholar;
    
    select [2] character as researcher:
        is researcher of library,
        is connected of library,
        hometown = Location,
        is purpose,
        :where
        vocation = "researcher",
        hometown ?= Location,
        age = [20:60],
        is scholar;
    
    select [7] character as student:
        is student of library,
        is student of classroom,
        is connected of library,
        is connected of classroom,
        is purpose,
        hometown = Location,
        :where
        vocation = "student",
        hometown ?= Location,
        age = [18:25],
        is scholar;
    
   
    create [1] location as library:
        name = "Library of [Gran |Grand |]#Location# Academy",
        location_type = "library",
        hometown = Location,
        is purpose,
        has librarian of librarian,
        has researcher of researcher,
        has student of student;
    
    select [2] character as professor:
        is professor of classroom,
        is noteworthy,
        is connected of classroom,
        is purpose,
        hometown = Location,
        :where
        vocation = "professor",
        hometown ?= Location,
        age = [30:65],
        is scholar;
    
    //student & professor
    create [1] location as classroom:
        name = "A classroom of #Academy#",
        location_type = "classroom",
        hometown = Location,
        is purpose,
        has professor of professor,
        has dean of dean,
        has student of student;
 
    
    select [1] character as dean:
        hometown = Location,
        is noteworthy,
        is important,
        is purpose,
        :where
        vocation = "dean",
        hometown ?= Location,
        age = [30:65],
        is scholar;
    
    create [1] location as quad:
        name = "The quad of #Academy#",
        location_type = "quad",
        hometown = Location,
        is purpose,
        has visitor of dean,
        has visitor of professor,
        has visitor of student,
        has visitor of librarian
    ;
    
    
    create [1] old_family; 
    create [1] young_family;
    create [1] tavern
    .
initialization magic_town:
    let Location = "Tenepo";
    
    
    create [1] location as town:
        name = "around #Location#",
        location_type = "town",
        is purpose,
        hometown = Location;
    
    select [1] character as high_priest:
        is high_priest of temple,
        is connected of temple,
        hometown = Location,
        is noteworthy,
        is boss of priest,
        is boss of monk,
        is important,
        is purpose,
        :where
        vocation = "high_priest",
        hometown ?= Location,
        age = [40:70],
        is believer;

    select [3] character as priest:
        is priest of temple,
        is connected of temple,
        hometown = Location,
        is purpose,
        is employee of high_priest,
        :where
        vocation = "priest",
        hometown ?= Location,
        age = [30:60],
        is believer;
        
    select [5] character as monk:
        is monk of temple,
        is connected of temple,
        hometown = Location,
        is purpose,
        is employee of high_priest,
        :where
        vocation = "monk",
        hometown ?= Location,
        age = [18:80],
        is believer;
    
    select [10:20] character as follower:
        is follower of temple,
        is connected of temple,
        :where 
        is believer;
    
    create [1] location as temple:
        location_type = "temple",
        name = "The Temple of #Location#",
        hometown = Location,
        is purpose,
        has high_priest of high_priest,
        has priest of priest,
        has monk of monk,
        has follower of follower
    ;
    
    create [1] old_family; 
    create [1] young_family
    .
    
initialization townie_town:
    let Location = "Jundacio",
    ElderName = first town_elder's last_name,
    ElderSkin = town_elder's skin,
    ElderHair = town_elder's hair;
    
    
    create [1] location as town:
        location_type = "town",
        hometown = Location,
        is purpose,
        name = "around #Location#",
        has person of town_elder,
        has person of parent,
        has person of child;
    
    select [1] character as town_elder:
        is parent of child,
        is spouse of parent,
        is related_to of child,
        is related_to of parent,
        is connected of elders_house,
        is resident of elders_house,
        is elder of elders_house,
        is noteworthy,
        is connected of elders_house,
        is connected of town,
        is purpose,
        hometown = Location,
        is important,
        :where
        vocation = "town_elder",
        hometown ?= Location,
        is not parent, 
        is not spouse,
        age = [50:80];
        
    
    select [1] character as parent:
        is parent of child,
        is spouse of town_elder,
        is related_to of child,
        is related_to of town_elder,
        is connected of elders_house,
        is resident of elders_house,
        last_name = ElderName,
        hometown = Location,
        is connected of town,
        :where
        has a vocation,
        hometown ?= Location,
        is not parent, 
        is not spouse,
        age = [50:70];
    
    select [1:3] character as child:
        is child of parent,
        is child of town_elder,
        is sibling of child,
        is related_to of child,
        is related_to of parent,
        is related_to of town_elder,
        is connected of elders_house,
        is connected of town,
        is resident of elders_house,
        last_name = ElderName,
        skin = ElderSkin,
        hair = ElderHair,
        hometown = Location,
        :where
        has a vocation,
        hometown ?= Location,
        is not child,
        age = [20:40];
        
    create [1] location as elders_house:
        location_type = "elders_house",
        hometown = Location,
        is purpose,
        name = "The elder of #Location#'s house",
        has elder of town_elder;
        
    create [1] smith_shop;
    create [1] marketplace;
    create [1] old_family; 
    create [1] young_family;
    create [1] tavern
    .

initialization chosen_ones:
    select [7] character as chosen_one:
        is chosen_one,
        is connected_to of chosen_one,
        :where
        has a purpose,
        age = [10:70].

initialize:
	create [200] character;
    create [1] royal_country;
    create [1] mining_town;
    create [1] port_town;
    create [1] thieves_town;
    create [1] ancient_city;
    create [1] merchant_city;
    create [1] scholar_town;
    create [1] magic_town;
    create [1] townie_town;
    create [1] chosen_ones.

filter relationships == 0.
filter status purpose == 0.
//MAGIC TOWN

//TOWNIE TOWN

//locations
//blacksmith
//shrine
//monastery
//tavern
//inn
//market
////mansion/manor
//auction_house
//castle
//stables
//library
//gym -- FF7?
//theater/opera house
//baths
//armory
//university
//docks
//fishery
//