# Generated from kismet_initialization.ebnf by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\66")
        buf.write("\u015d\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3")
        buf.write("\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\n")
        buf.write("\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\16\3\16")
        buf.write("\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\22\3\22")
        buf.write("\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23")
        buf.write("\3\23\3\24\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\26\3\26")
        buf.write("\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30")
        buf.write("\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32")
        buf.write("\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34")
        buf.write("\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3\37\3\37\3 \3 \3")
        buf.write(" \3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3")
        buf.write("#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3&\3&\3&\3\'")
        buf.write("\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3)\3)\3)\3*\3*\3*\3")
        buf.write("+\3+\3+\3+\3+\3,\3,\3,\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3")
        buf.write("-\3.\3.\7.\u0123\n.\f.\16.\u0126\13.\3/\3/\7/\u012a\n")
        buf.write("/\f/\16/\u012d\13/\3\60\5\60\u0130\n\60\3\60\3\60\3\61")
        buf.write("\6\61\u0135\n\61\r\61\16\61\u0136\3\61\3\61\6\61\u013b")
        buf.write("\n\61\r\61\16\61\u013c\5\61\u013f\n\61\3\62\3\62\3\63")
        buf.write("\6\63\u0144\n\63\r\63\16\63\u0145\3\63\3\63\3\64\3\64")
        buf.write("\3\64\3\64\7\64\u014e\n\64\f\64\16\64\u0151\13\64\3\64")
        buf.write("\3\64\3\65\3\65\7\65\u0157\n\65\f\65\16\65\u015a\13\65")
        buf.write("\3\65\3\65\3\u0158\2\66\3\3\5\4\7\5\t\6\13\7\r\b\17\t")
        buf.write("\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23")
        buf.write("%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36")
        buf.write(";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63")
        buf.write("e\64g\65i\66\3\2\t\3\2c|\5\2C\\aac|\3\2C\\\6\2##C\\aa")
        buf.write("c|\3\2\62;\5\2\13\f\17\17\"\"\4\2\f\f\17\17\2\u0165\2")
        buf.write("\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3")
        buf.write("\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2")
        buf.write("\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2")
        buf.write("\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%")
        buf.write("\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2")
        buf.write("\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67")
        buf.write("\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2")
        buf.write("A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2")
        buf.write("\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2")
        buf.write("\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2")
        buf.write("\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3")
        buf.write("\2\2\2\2i\3\2\2\2\3k\3\2\2\2\5r\3\2\2\2\7t\3\2\2\2\tv")
        buf.write("\3\2\2\2\13x\3\2\2\2\rz\3\2\2\2\17}\3\2\2\2\21\177\3\2")
        buf.write("\2\2\23\u0081\3\2\2\2\25\u0084\3\2\2\2\27\u0087\3\2\2")
        buf.write("\2\31\u008a\3\2\2\2\33\u008c\3\2\2\2\35\u008e\3\2\2\2")
        buf.write("\37\u0090\3\2\2\2!\u0092\3\2\2\2#\u0094\3\2\2\2%\u00a3")
        buf.write("\3\2\2\2\'\u00a5\3\2\2\2)\u00a9\3\2\2\2+\u00ab\3\2\2\2")
        buf.write("-\u00b2\3\2\2\2/\u00b5\3\2\2\2\61\u00bc\3\2\2\2\63\u00c2")
        buf.write("\3\2\2\2\65\u00ca\3\2\2\2\67\u00cd\3\2\2\29\u00d1\3\2")
        buf.write("\2\2;\u00d3\3\2\2\2=\u00d5\3\2\2\2?\u00d9\3\2\2\2A\u00dc")
        buf.write("\3\2\2\2C\u00e3\3\2\2\2E\u00e9\3\2\2\2G\u00ee\3\2\2\2")
        buf.write("I\u00f5\3\2\2\2K\u00f9\3\2\2\2M\u00fc\3\2\2\2O\u0101\3")
        buf.write("\2\2\2Q\u0107\3\2\2\2S\u010a\3\2\2\2U\u010d\3\2\2\2W\u0112")
        buf.write("\3\2\2\2Y\u0115\3\2\2\2[\u0120\3\2\2\2]\u0127\3\2\2\2")
        buf.write("_\u012f\3\2\2\2a\u0134\3\2\2\2c\u0140\3\2\2\2e\u0143\3")
        buf.write("\2\2\2g\u0149\3\2\2\2i\u0154\3\2\2\2kl\7h\2\2lm\7k\2\2")
        buf.write("mn\7n\2\2no\7v\2\2op\7g\2\2pq\7t\2\2q\4\3\2\2\2rs\7\60")
        buf.write("\2\2s\6\3\2\2\2tu\7}\2\2u\b\3\2\2\2vw\7\177\2\2w\n\3\2")
        buf.write("\2\2xy\7?\2\2y\f\3\2\2\2z{\7?\2\2{|\7?\2\2|\16\3\2\2\2")
        buf.write("}~\7>\2\2~\20\3\2\2\2\177\u0080\7@\2\2\u0080\22\3\2\2")
        buf.write("\2\u0081\u0082\7>\2\2\u0082\u0083\7?\2\2\u0083\24\3\2")
        buf.write("\2\2\u0084\u0085\7@\2\2\u0085\u0086\7?\2\2\u0086\26\3")
        buf.write("\2\2\2\u0087\u0088\7#\2\2\u0088\u0089\7?\2\2\u0089\30")
        buf.write("\3\2\2\2\u008a\u008b\7]\2\2\u008b\32\3\2\2\2\u008c\u008d")
        buf.write("\7_\2\2\u008d\34\3\2\2\2\u008e\u008f\7<\2\2\u008f\36\3")
        buf.write("\2\2\2\u0090\u0091\7`\2\2\u0091 \3\2\2\2\u0092\u0093\7")
        buf.write("a\2\2\u0093\"\3\2\2\2\u0094\u0095\7k\2\2\u0095\u0096\7")
        buf.write("p\2\2\u0096\u0097\7k\2\2\u0097\u0098\7v\2\2\u0098\u0099")
        buf.write("\7k\2\2\u0099\u009a\7c\2\2\u009a\u009b\7n\2\2\u009b\u009c")
        buf.write("\7k\2\2\u009c\u009d\7|\2\2\u009d\u009e\7c\2\2\u009e\u009f")
        buf.write("\7v\2\2\u009f\u00a0\7k\2\2\u00a0\u00a1\7q\2\2\u00a1\u00a2")
        buf.write("\7p\2\2\u00a2$\3\2\2\2\u00a3\u00a4\7=\2\2\u00a4&\3\2\2")
        buf.write("\2\u00a5\u00a6\7n\2\2\u00a6\u00a7\7g\2\2\u00a7\u00a8\7")
        buf.write("v\2\2\u00a8(\3\2\2\2\u00a9\u00aa\7.\2\2\u00aa*\3\2\2\2")
        buf.write("\u00ab\u00ac\7e\2\2\u00ac\u00ad\7t\2\2\u00ad\u00ae\7g")
        buf.write("\2\2\u00ae\u00af\7c\2\2\u00af\u00b0\7v\2\2\u00b0\u00b1")
        buf.write("\7g\2\2\u00b1,\3\2\2\2\u00b2\u00b3\7c\2\2\u00b3\u00b4")
        buf.write("\7u\2\2\u00b4.\3\2\2\2\u00b5\u00b6\7u\2\2\u00b6\u00b7")
        buf.write("\7g\2\2\u00b7\u00b8\7n\2\2\u00b8\u00b9\7g\2\2\u00b9\u00ba")
        buf.write("\7e\2\2\u00ba\u00bb\7v\2\2\u00bb\60\3\2\2\2\u00bc\u00bd")
        buf.write("\7y\2\2\u00bd\u00be\7j\2\2\u00be\u00bf\7g\2\2\u00bf\u00c0")
        buf.write("\7t\2\2\u00c0\u00c1\7g\2\2\u00c1\62\3\2\2\2\u00c2\u00c3")
        buf.write("\7f\2\2\u00c3\u00c4\7g\2\2\u00c4\u00c5\7h\2\2\u00c5\u00c6")
        buf.write("\7c\2\2\u00c6\u00c7\7w\2\2\u00c7\u00c8\7n\2\2\u00c8\u00c9")
        buf.write("\7v\2\2\u00c9\64\3\2\2\2\u00ca\u00cb\7A\2\2\u00cb\u00cc")
        buf.write("\7?\2\2\u00cc\66\3\2\2\2\u00cd\u00ce\7j\2\2\u00ce\u00cf")
        buf.write("\7c\2\2\u00cf\u00d0\7u\2\2\u00d08\3\2\2\2\u00d1\u00d2")
        buf.write("\7c\2\2\u00d2:\3\2\2\2\u00d3\u00d4\7-\2\2\u00d4<\3\2\2")
        buf.write("\2\u00d5\u00d6\7p\2\2\u00d6\u00d7\7q\2\2\u00d7\u00d8\7")
        buf.write("y\2\2\u00d8>\3\2\2\2\u00d9\u00da\7)\2\2\u00da\u00db\7")
        buf.write("u\2\2\u00db@\3\2\2\2\u00dc\u00dd\7t\2\2\u00dd\u00de\7")
        buf.write("c\2\2\u00de\u00df\7p\2\2\u00df\u00e0\7f\2\2\u00e0\u00e1")
        buf.write("\7q\2\2\u00e1\u00e2\7o\2\2\u00e2B\3\2\2\2\u00e3\u00e4")
        buf.write("\7h\2\2\u00e4\u00e5\7k\2\2\u00e5\u00e6\7t\2\2\u00e6\u00e7")
        buf.write("\7u\2\2\u00e7\u00e8\7v\2\2\u00e8D\3\2\2\2\u00e9\u00ea")
        buf.write("\7n\2\2\u00ea\u00eb\7c\2\2\u00eb\u00ec\7u\2\2\u00ec\u00ed")
        buf.write("\7v\2\2\u00edF\3\2\2\2\u00ee\u00ef\7j\2\2\u00ef\u00f0")
        buf.write("\7c\2\2\u00f0\u00f1\7u\2\2\u00f1\u00f2\7j\2\2\u00f2\u00f3")
        buf.write("\7g\2\2\u00f3\u00f4\7f\2\2\u00f4H\3\2\2\2\u00f5\u00f6")
        buf.write("\7p\2\2\u00f6\u00f7\7q\2\2\u00f7\u00f8\7v\2\2\u00f8J\3")
        buf.write("\2\2\2\u00f9\u00fa\7k\2\2\u00fa\u00fb\7u\2\2\u00fbL\3")
        buf.write("\2\2\2\u00fc\u00fd\7k\2\2\u00fd\u00fe\7u\2\2\u00fe\u00ff")
        buf.write("\7p\2\2\u00ff\u0100\7v\2\2\u0100N\3\2\2\2\u0101\u0102")
        buf.write("\7k\2\2\u0102\u0103\7u\2\2\u0103\u0104\7p\2\2\u0104\u0105")
        buf.write("\7)\2\2\u0105\u0106\7v\2\2\u0106P\3\2\2\2\u0107\u0108")
        buf.write("\7v\2\2\u0108\u0109\7q\2\2\u0109R\3\2\2\2\u010a\u010b")
        buf.write("\7q\2\2\u010b\u010c\7h\2\2\u010cT\3\2\2\2\u010d\u010e")
        buf.write("\7y\2\2\u010e\u010f\7k\2\2\u010f\u0110\7v\2\2\u0110\u0111")
        buf.write("\7j\2\2\u0111V\3\2\2\2\u0112\u0113\7c\2\2\u0113\u0114")
        buf.write("\7v\2\2\u0114X\3\2\2\2\u0115\u0116\7k\2\2\u0116\u0117")
        buf.write("\7p\2\2\u0117\u0118\7k\2\2\u0118\u0119\7v\2\2\u0119\u011a")
        buf.write("\7k\2\2\u011a\u011b\7c\2\2\u011b\u011c\7n\2\2\u011c\u011d")
        buf.write("\7k\2\2\u011d\u011e\7|\2\2\u011e\u011f\7g\2\2\u011fZ\3")
        buf.write("\2\2\2\u0120\u0124\t\2\2\2\u0121\u0123\t\3\2\2\u0122\u0121")
        buf.write("\3\2\2\2\u0123\u0126\3\2\2\2\u0124\u0122\3\2\2\2\u0124")
        buf.write("\u0125\3\2\2\2\u0125\\\3\2\2\2\u0126\u0124\3\2\2\2\u0127")
        buf.write("\u012b\t\4\2\2\u0128\u012a\t\5\2\2\u0129\u0128\3\2\2\2")
        buf.write("\u012a\u012d\3\2\2\2\u012b\u0129\3\2\2\2\u012b\u012c\3")
        buf.write("\2\2\2\u012c^\3\2\2\2\u012d\u012b\3\2\2\2\u012e\u0130")
        buf.write("\5c\62\2\u012f\u012e\3\2\2\2\u012f\u0130\3\2\2\2\u0130")
        buf.write("\u0131\3\2\2\2\u0131\u0132\5a\61\2\u0132`\3\2\2\2\u0133")
        buf.write("\u0135\t\6\2\2\u0134\u0133\3\2\2\2\u0135\u0136\3\2\2\2")
        buf.write("\u0136\u0134\3\2\2\2\u0136\u0137\3\2\2\2\u0137\u013e\3")
        buf.write("\2\2\2\u0138\u013a\7\60\2\2\u0139\u013b\t\6\2\2\u013a")
        buf.write("\u0139\3\2\2\2\u013b\u013c\3\2\2\2\u013c\u013a\3\2\2\2")
        buf.write("\u013c\u013d\3\2\2\2\u013d\u013f\3\2\2\2\u013e\u0138\3")
        buf.write("\2\2\2\u013e\u013f\3\2\2\2\u013fb\3\2\2\2\u0140\u0141")
        buf.write("\7/\2\2\u0141d\3\2\2\2\u0142\u0144\t\7\2\2\u0143\u0142")
        buf.write("\3\2\2\2\u0144\u0145\3\2\2\2\u0145\u0143\3\2\2\2\u0145")
        buf.write("\u0146\3\2\2\2\u0146\u0147\3\2\2\2\u0147\u0148\b\63\2")
        buf.write("\2\u0148f\3\2\2\2\u0149\u014a\7\61\2\2\u014a\u014b\7\61")
        buf.write("\2\2\u014b\u014f\3\2\2\2\u014c\u014e\n\b\2\2\u014d\u014c")
        buf.write("\3\2\2\2\u014e\u0151\3\2\2\2\u014f\u014d\3\2\2\2\u014f")
        buf.write("\u0150\3\2\2\2\u0150\u0152\3\2\2\2\u0151\u014f\3\2\2\2")
        buf.write("\u0152\u0153\b\64\2\2\u0153h\3\2\2\2\u0154\u0158\7$\2")
        buf.write("\2\u0155\u0157\13\2\2\2\u0156\u0155\3\2\2\2\u0157\u015a")
        buf.write("\3\2\2\2\u0158\u0159\3\2\2\2\u0158\u0156\3\2\2\2\u0159")
        buf.write("\u015b\3\2\2\2\u015a\u0158\3\2\2\2\u015b\u015c\7$\2\2")
        buf.write("\u015cj\3\2\2\2\f\2\u0124\u012b\u012f\u0136\u013c\u013e")
        buf.write("\u0145\u014f\u0158\3\b\2\2")
        return buf.getvalue()


class kismet_initializationLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    NAME = 45
    VAR = 46
    NUMBER = 47
    POSITIVE_NUMBER = 48
    NEG = 49
    WS = 50
    LINE_COMMENT = 51
    RANDOM_TEXT = 52

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'filter'", "'.'", "'{'", "'}'", "'='", "'=='", "'<'", "'>'", 
            "'<='", "'>='", "'!='", "'['", "']'", "':'", "'^'", "'_'", "'initialization'", 
            "';'", "'let'", "','", "'create'", "'as'", "'select'", "'where'", 
            "'default'", "'?='", "'has'", "'a'", "'+'", "'now'", "''s'", 
            "'random'", "'first'", "'last'", "'hashed'", "'not'", "'is'", 
            "'isnt'", "'isn't'", "'to'", "'of'", "'with'", "'at'", "'initialize'", 
            "'-'" ]

    symbolicNames = [ "<INVALID>",
            "NAME", "VAR", "NUMBER", "POSITIVE_NUMBER", "NEG", "WS", "LINE_COMMENT", 
            "RANDOM_TEXT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "NAME", "VAR", "NUMBER", "POSITIVE_NUMBER", "NEG", "WS", 
                  "LINE_COMMENT", "RANDOM_TEXT" ]

    grammarFileName = "kismet_initialization.ebnf"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


